components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Message:
      properties:
        message:
          title: Message
          type: string
      required:
      - message
      title: Message
      type: object
    User:
      properties:
        api_key:
          maxLength: 36
          title: Api Key
          type: string
        id:
          maxLength: 40
          minLength: 4
          title: Id
          type: string
        username:
          maxLength: 25
          minLength: 2
          title: Username
          type: string
      required:
      - username
      - id
      - api_key
      title: User
      type: object
    UserCreate:
      properties:
        id:
          maxLength: 40
          minLength: 4
          title: Id
          type: string
        username:
          maxLength: 25
          minLength: 2
          title: Username
          type: string
      required:
      - username
      - id
      title: UserCreate
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.0.2
paths:
  /api/v1/system/settings:
    patch:
      operationId: create_user_api_v1_system_settings_patch
      parameters:
      - in: header
        name: x-token
        required: false
        schema:
          title: X-Token
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create User
      tags:
      - system
  /api/v1/users:
    get:
      operationId: listUsers
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                title: Response Listusers
                type: array
          description: Successful Response
      summary: List Users
      tags:
      - users
    post:
      description: 'Register a new user. Note that the system setting `assignment_order`
        will be

        reset after this operation.'
      operationId: createUser
      parameters:
      - in: header
        name: x-token
        required: false
        schema:
          title: X-Token
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Request body is not a valid JSON
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Missing API key
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: Admin access required
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: User already exists
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Register new user
      tags:
      - users
  /api/v1/users/{user_id}:
    get:
      operationId: getUser
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get User
      tags:
      - users
  /health:
    get:
      operationId: health_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Health

